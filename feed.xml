<feed xmlns="http://www.w3.org/2005/Atom"> <generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="https://flying-polarbear.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://flying-polarbear.github.io/" rel="alternate" type="text/html" /> <updated>2019-11-12T10:52:02+08:00</updated> <id>https://flying-polarbear.github.io//feed.xml</id> <entry><title>你们的GATK流程需要ubam吗？</title><link href="https://flying-polarbear.github.io//posts/gatk-ubam/" rel="alternate" type="text/html" title="你们的GATK流程需要ubam吗？" /><published>2019-11-02T17:21:00+08:00</published> <updated>2019-11-12T10:52:02+08:00</updated> <id>https://flying-polarbear.github.io//posts/gatk-ubam/</id> <content src="https://flying-polarbear.github.io//posts/gatk-ubam/" /> <author> <name>搞生信的变态</name> </author> <category term="Tech" /> <category term="GATK" /> <summary>在得到下机fq文件以后，大家第一步是怎么进行往下处理数据的呢？除了QC以后，貌似基本上就是需要将fq文件进行比对了，这也是很常见的第一个步骤。 本人是严格按照官方方式进行流程开发，然而在GATK官方的Best Practice里面发现，官方的流程的起点并不是fq文件，而是ubam文件。如果是fq下机，则需要多一步转换成ubam文件，以及合并比对结果的步骤 这里官方论坛就有一个人对这个问题...</summary> </entry> <entry><title>正链负链正义链负义链分不清？</title><link href="https://flying-polarbear.github.io//posts/dna-strand/" rel="alternate" type="text/html" title="正链负链正义链负义链分不清？" /><published>2019-10-28T18:21:00+08:00</published> <updated>2019-11-12T10:52:02+08:00</updated> <id>https://flying-polarbear.github.io//posts/dna-strand/</id> <content src="https://flying-polarbear.github.io//posts/dna-strand/" /> <author> <name>搞生信的变态</name> </author> <category term="Tech" /> <category term="DNA" /> <summary>到底什么是正链、负链、正义链、负义链、编码链、模板链？？？ 作为非生物科班出身的人来说，这个东西我反正记得从研究生开始，也就是快十年前的时候就在纠结了，每次不清楚的时候就查一下，觉得已经搞清楚了，可是过不久又一脸懵逼了，然后又查，然后又忘，周而复始，直至今日。 相信也有很多人有跟我类似的情况，比如这篇公众号文章就很好的总结了下这个问题点我查看 不过趁着现在自己有博客了，不至于那么懒了，可...</summary> </entry> <entry><title>干货！服务器阵列卡如何添加硬盘</title><link href="https://flying-polarbear.github.io//posts/add-disk/" rel="alternate" type="text/html" title="干货！服务器阵列卡如何添加硬盘" /><published>2019-10-28T15:34:00+08:00</published> <updated>2019-11-12T10:52:02+08:00</updated> <id>https://flying-polarbear.github.io//posts/add-disk/</id> <content src="https://flying-polarbear.github.io//posts/add-disk/" /> <author> <name>搞生信的变态</name> </author> <category term="Tech" /> <category term="Linux" /> <summary>这是一篇实际操作，解决问题的长文，没耐心者请直接跳过！！！ 声明！此类对服务器的操作都及其危险，此文仅供参考、学习，任何人因此造成的后果一律与我无关！ 声明！此类对服务器的操作都及其危险，此文仅供参考、学习，任何人因此造成的后果一律与我无关！ 声明！此类对服务器的操作都及其危险，此文仅供参考、学习，任何人因此造成的后果一律与我无关！ 可能有人觉得不就是把硬盘插进去，然后格式化下就完了吗！...</summary> </entry> <entry><title>git同步远程更新</title><link href="https://flying-polarbear.github.io//posts/git-syn/" rel="alternate" type="text/html" title="git同步远程更新" /><published>2019-10-25T10:58:00+08:00</published> <updated>2019-11-12T10:52:02+08:00</updated> <id>https://flying-polarbear.github.io//posts/git-syn/</id> <content src="https://flying-polarbear.github.io//posts/git-syn/" /> <author> <name>搞生信的变态</name> </author> <category term="Tech" /> <category term="git" /> <summary>在clone了某个repo之后，由于远程端更新了，我们也想同步更新远程repo，实现的方式有很多 git log首先大致看下提交信息 git remote -v看下remote端地址信息是否正确 git fetch origin master:tmp下载远程maste分枝到本地tmp分支 git diff tmp检查更新内容 git merge tmp合并tmp分枝到...</summary> </entry> <entry><title>ruby hash fetch方法效率问题</title><link href="https://flying-polarbear.github.io//posts/ruby-fetch/" rel="alternate" type="text/html" title="ruby hash fetch方法效率问题" /><published>2019-10-22T16:47:00+08:00</published> <updated>2019-11-12T10:52:02+08:00</updated> <id>https://flying-polarbear.github.io//posts/ruby-fetch/</id> <content src="https://flying-polarbear.github.io//posts/ruby-fetch/" /> <author> <name>搞生信的变态</name> </author> <category term="Tech" /> <category term="ruby" /> <summary>我们经常用的hash取值的问题，假设有个hash, h = {:a=&gt;1,:b=2},对h取值，一般用索引[]的方法，比如h[:a],h[:b]，在key存在的时候没有问题，但是当key不存在的时候，比如h[:x]，取出来的值就是nil了，在python中甚至会直接报错，这有个问题就是，假设有个存在key的值，假设h[:c]=nil,那么按照这种规则，我根本不知道:c这个key到底是不...</summary> </entry> </feed>
